<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1BaseFabData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::BaseFabData</compoundname>
    <basecompoundref refid="structamrex_1_1FabAllocator" prot="public" virt="non-virtual">amrex::FabAllocator</basecompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; T, Allocator &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; char &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; EBCellFlag &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; int &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1BaseFab" prot="public" virt="non-virtual">amrex::BaseFab&lt; Real &gt;</derivedcompoundref>
    <includes refid="AMReX__BaseFab_8H" local="no">AMReX_BaseFab.H</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1BaseFabData_1a18c921a6524bd14b6d5304528a4b5448" prot="public" static="no" mutable="no">
        <type>T *</type>
        <definition>T* amrex::BaseFabData&lt; T &gt;::dptr</definition>
        <argsstring></argsstring>
        <name>dptr</name>
        <briefdescription>
<para>The data pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="116" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BaseFabData_1a004be47a38cb5df475b32595083287a3" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::BaseFabData&lt; T &gt;::domain</definition>
        <argsstring></argsstring>
        <name>domain</name>
        <briefdescription>
<para>My index space. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="117" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BaseFabData_1a9e0d16aba820042ba77a256b3e342bc5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::BaseFabData&lt; T &gt;::nvar</definition>
        <argsstring></argsstring>
        <name>nvar</name>
        <briefdescription>
<para>Number components. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="118" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BaseFabData_1a377f301bd074d9ac12b092167603d64b" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long amrex::BaseFabData&lt; T &gt;::truesize</definition>
        <argsstring></argsstring>
        <name>truesize</name>
        <briefdescription>
<para>nvar*numpts that was allocated on heap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="119" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BaseFabData_1a16e2d3ceee6c7fd51947348985ba86f8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::BaseFabData&lt; T &gt;::ptr_owner</definition>
        <argsstring></argsstring>
        <name>ptr_owner</name>
        <briefdescription>
<para>Owner of T*? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="120" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BaseFabData_1a5894675ed07e11741a736c438bc03a02" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::BaseFabData&lt; T &gt;::shared_memory</definition>
        <argsstring></argsstring>
        <name>shared_memory</name>
        <briefdescription>
<para>Is the memory allocated in shared memory? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="121" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1BaseFabData_1a5846ac0768d9d6934c192d589fdc0475" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::BaseFabData&lt; T &gt;::BaseFabData</definition>
        <argsstring>(T *a_dptr, Box const &amp;a_domain, int a_nvar, long a_truesize, bool a_ptr_owner, bool a_shared_memory) noexcept</argsstring>
        <name>BaseFabData</name>
        <param>
          <type>T *</type>
          <declname>a_dptr</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>a_domain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_nvar</declname>
        </param>
        <param>
          <type>long</type>
          <declname>a_truesize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_ptr_owner</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_shared_memory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="110" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BaseFabData_1a12296e20c3bcddbd6901ba51e8cb8668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BaseFabData&lt; T &gt;::BaseFabData</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>BaseFabData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BaseFabData_1aa826bfc656d07f0b2ab7c6a74a62b07a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BaseFabData&lt; T &gt;::setOwner</definition>
        <argsstring>(bool b) noexcept</argsstring>
        <name>setOwner</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="122" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="122" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="626">
        <label>amrex::TagBox</label>
        <link refid="classamrex_1_1TagBox"/>
        <childnode refid="625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="635">
        <label>amrex::EBFArrayBox</label>
        <link refid="classamrex_1_1EBFArrayBox"/>
        <childnode refid="633" relation="public-inheritance">
        </childnode>
      </node>
      <node id="627">
        <label>BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="629">
        <label>BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="625">
        <label>BaseFab&lt; char &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="634">
        <label>amrex::CutFab</label>
        <link refid="classamrex_1_1CutFab"/>
        <childnode refid="633" relation="public-inheritance">
        </childnode>
      </node>
      <node id="630">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="629" relation="public-inheritance">
        </childnode>
      </node>
      <node id="622">
        <label>amrex::BaseFabData&lt; T &gt;</label>
        <link refid="structamrex_1_1BaseFabData"/>
        <childnode refid="623" relation="public-inheritance">
        </childnode>
      </node>
      <node id="623">
        <label>amrex::FabAllocator</label>
        <link refid="structamrex_1_1FabAllocator"/>
      </node>
      <node id="632">
        <label>BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="628">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="627" relation="public-inheritance">
        </childnode>
      </node>
      <node id="631">
        <label>amrex::Mask</label>
        <link refid="classamrex_1_1Mask"/>
        <childnode refid="629" relation="public-inheritance">
        </childnode>
      </node>
      <node id="633">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="632" relation="public-inheritance">
        </childnode>
      </node>
      <node id="624">
        <label>amrex::BaseFab&lt; T &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="639">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="639" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="638">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="639" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="640" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="636">
        <label>amrex::BaseFabData&lt; T &gt;</label>
        <link refid="structamrex_1_1BaseFabData"/>
        <childnode refid="637" relation="public-inheritance">
        </childnode>
        <childnode refid="638" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="640">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="637">
        <label>amrex::FabAllocator</label>
        <link refid="structamrex_1_1FabAllocator"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" line="108" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H" bodystart="106" bodyend="123"/>
    <listofallmembers>
      <member refid="structamrex_1_1BaseFabData_1a5846ac0768d9d6934c192d589fdc0475" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>BaseFabData</name></member>
      <member refid="structamrex_1_1BaseFabData_1a12296e20c3bcddbd6901ba51e8cb8668" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>BaseFabData</name></member>
      <member refid="structamrex_1_1BaseFabData_1a004be47a38cb5df475b32595083287a3" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>domain</name></member>
      <member refid="structamrex_1_1BaseFabData_1a18c921a6524bd14b6d5304528a4b5448" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>dptr</name></member>
      <member refid="structamrex_1_1BaseFabData_1a9e0d16aba820042ba77a256b3e342bc5" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>nvar</name></member>
      <member refid="structamrex_1_1BaseFabData_1a16e2d3ceee6c7fd51947348985ba86f8" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>ptr_owner</name></member>
      <member refid="structamrex_1_1BaseFabData_1aa826bfc656d07f0b2ab7c6a74a62b07a" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>setOwner</name></member>
      <member refid="structamrex_1_1BaseFabData_1a5894675ed07e11741a736c438bc03a02" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>shared_memory</name></member>
      <member refid="structamrex_1_1BaseFabData_1a377f301bd074d9ac12b092167603d64b" prot="public" virt="non-virtual"><scope>amrex::BaseFabData</scope><name>truesize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
