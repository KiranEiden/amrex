<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__FabAllocator_8cpp" kind="file" language="C++">
    <compoundname>AMReX_FabAllocator.cpp</compoundname>
    <includes refid="AMReX__FabAllocator_8H" local="no">AMReX_FabAllocator.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <incdepgraph>
      <node id="14854">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14852" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
      </node>
      <node id="14853">
        <label>iomanip</label>
      </node>
      <node id="14842">
        <label>functional</label>
      </node>
      <node id="14875">
        <label>limits</label>
      </node>
      <node id="14863">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14870">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14872" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14877" relation="include">
        </childnode>
        <childnode refid="14878" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
      </node>
      <node id="14873">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14847" relation="include">
        </childnode>
        <childnode refid="14874" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14876" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14865" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14836">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="14837" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14839" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
      </node>
      <node id="14855">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
      </node>
      <node id="14850">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14852" relation="include">
        </childnode>
        <childnode refid="14853" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14854" relation="include">
        </childnode>
        <childnode refid="14857" relation="include">
        </childnode>
      </node>
      <node id="14874">
        <label>cmath</label>
      </node>
      <node id="14840">
        <label>stdexcept</label>
      </node>
      <node id="14880">
        <label>numeric</label>
      </node>
      <node id="14843">
        <label>string</label>
      </node>
      <node id="14852">
        <label>fstream</label>
      </node>
      <node id="14872">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14866">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="14867" relation="include">
        </childnode>
        <childnode refid="14845" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14836" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
        <childnode refid="14868" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
      </node>
      <node id="14869">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="14865">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="14879">
        <label>typeinfo</label>
      </node>
      <node id="14844">
        <label>cstdio</label>
      </node>
      <node id="14848">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="14849" relation="include">
        </childnode>
      </node>
      <node id="14868">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14858">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="14859" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14860" relation="include">
        </childnode>
        <childnode refid="14851" relation="include">
        </childnode>
        <childnode refid="14844" relation="include">
        </childnode>
        <childnode refid="14847" relation="include">
        </childnode>
        <childnode refid="14861" relation="include">
        </childnode>
        <childnode refid="14862" relation="include">
        </childnode>
      </node>
      <node id="14859">
        <label>stack</label>
      </node>
      <node id="14832">
        <label>vector</label>
      </node>
      <node id="14835">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="14836" relation="include">
        </childnode>
      </node>
      <node id="14837">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="14860">
        <label>utility</label>
      </node>
      <node id="14867">
        <label>array</label>
      </node>
      <node id="14851">
        <label>sstream</label>
      </node>
      <node id="14839">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="14840" relation="include">
        </childnode>
      </node>
      <node id="14831">
        <label>AMReX_FabAllocator.H</label>
        <link refid="AMReX__FabAllocator_8H"/>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14833" relation="include">
        </childnode>
        <childnode refid="14834" relation="include">
        </childnode>
        <childnode refid="14848" relation="include">
        </childnode>
      </node>
      <node id="14857">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14854" relation="include">
        </childnode>
        <childnode refid="14858" relation="include">
        </childnode>
        <childnode refid="14863" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14864" relation="include">
        </childnode>
        <childnode refid="14866" relation="include">
        </childnode>
        <childnode refid="14855" relation="include">
        </childnode>
        <childnode refid="14870" relation="include">
        </childnode>
        <childnode refid="14841" relation="include">
        </childnode>
        <childnode refid="14832" relation="include">
        </childnode>
        <childnode refid="14843" relation="include">
        </childnode>
        <childnode refid="14879" relation="include">
        </childnode>
        <childnode refid="14856" relation="include">
        </childnode>
        <childnode refid="14842" relation="include">
        </childnode>
        <childnode refid="14875" relation="include">
        </childnode>
        <childnode refid="14880" relation="include">
        </childnode>
      </node>
      <node id="14834">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14846" relation="include">
        </childnode>
        <childnode refid="14847" relation="include">
        </childnode>
      </node>
      <node id="14878">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14835" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
        <childnode refid="14837" relation="include">
        </childnode>
      </node>
      <node id="14871">
        <label>iosfwd</label>
      </node>
      <node id="14847">
        <label>cstdlib</label>
      </node>
      <node id="14862">
        <label>cfenv</label>
      </node>
      <node id="14841">
        <label>iostream</label>
      </node>
      <node id="14877">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="14871" relation="include">
        </childnode>
        <childnode refid="14838" relation="include">
        </childnode>
        <childnode refid="14873" relation="include">
        </childnode>
        <childnode refid="14869" relation="include">
        </childnode>
      </node>
      <node id="14846">
        <label>cstddef</label>
      </node>
      <node id="14876">
        <label>climits</label>
      </node>
      <node id="14833">
        <label>mutex</label>
      </node>
      <node id="14861">
        <label>csignal</label>
      </node>
      <node id="14830">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabAllocator.cpp</label>
        <link refid="AMReX_FabAllocator.cpp"/>
        <childnode refid="14831" relation="include">
        </childnode>
        <childnode refid="14850" relation="include">
        </childnode>
      </node>
      <node id="14849">
        <label>type_traits</label>
      </node>
      <node id="14838">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="14856">
        <label>algorithm</label>
      </node>
      <node id="14845">
        <label>memory</label>
      </node>
      <node id="14864">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="14865" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabAllocator_8H" kindref="compound">AMReX_FabAllocator.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">FabPoolAllocator*<sp/>fab_pool_allocator<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">constexpr<sp/>std::size_t<sp/>FabPoolAllocator::block_size;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>alloc_bulk_size<sp/>=<sp/>64*1024;<sp/></highlight><highlight class="comment">//<sp/>64K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>alloc_bulk_size<sp/>/<sp/>FabPoolAllocator::block_size;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">FabPoolAllocator::FabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_FAB_IS_PINNED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_arena(<ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>())</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_FAB_IS_MANAGED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_arena(<ref refid="namespaceamrex_1a76cc74eb7c42bf4d111ac5cae5db8420" kindref="member">The_Managed_Arena</ref>())</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_arena(<ref refid="namespaceamrex_1adcb4e473f4a6058ae8abd15c75bde706" kindref="member">The_Cpu_Arena</ref>())</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>m_arena-&gt;alloc(alloc_bulk_size);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m_orig.push_back(p);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nblocks;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pool.push_back(p);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p<sp/>+<sp/>block_size);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">FabPoolAllocator::~FabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>:<sp/>m_orig)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_arena-&gt;free(p);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="43"><highlight class="normal">FabPoolAllocator::alloc<sp/>(std::size_t<sp/>nbytes)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(nbytes<sp/>&lt;=<sp/>block_size);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(m_mutex);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pool.empty())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m_pool.back();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pool.pop_back();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m_arena-&gt;alloc(alloc_bulk_size);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_orig.push_back(p);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>nblocks;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pool.push_back(p);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)p<sp/>+<sp/>block_size);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">FabPoolAllocator::free<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(m_mutex);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pool.push_back(ptr);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeFabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>fab_pool_allocator<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>FabPoolAllocator();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroyFabPoolAllocator<sp/>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fab_pool_allocator;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>fab_pool_allocator<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabAllocator.cpp"/>
  </compounddef>
</doxygen>
